name: Build and Deploy demo-order-data

on:
  push:
    branches: [  Master ]
  pull_request:
    branches: [  Master ]

env:
  APP_NAME: order-data
  NAMESPACE: samp
  CLUSTER_NAME: nginx-dev
  CLUSTER_PROJECT: zs-devops
  GCR_PROJECT: zs-devops
  STAGE_DEPLOY_KEY: '{
  "type": "service_account",
  "project_id": "zs-devops",
  "private_key_id": "feaf5e3d65982153f19b16198d6dfc823bd25095",
  "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDC6dTQT7IbHYmn\nzSonKnuE9WUAnFH930loesj1sOHMpiptAY5GOpTDavpAvT2Ronon5NBgRctuTPx9\nZQ5FizmZbhim62VPNJ3cNrbpEIZ03M6a3Tvnpz1Pu7yiqAzSKDmelnEoRJP4AT9z\nEteWCEg089b5Ug8FaEfD2G3kWUwkqXHbt1Y1zClbZEn0pdDDYoPnDyio74aY3n+e\nLQL/TL3iTGhThH+xojrX4kQZ/p9U87RR+GAx1TZ2v/fa1yQ+KxsT8oidIbrgHN73\neYwkfYLTiB+15qTsBgmt50N51UFIb/HrcrCjjeSJxAd+4ZNdILJY+q8Suh+Ra8vV\nPK6ap/GLAgMBAAECggEAAp1B4H4PrLLgAG+ipFg/i2UCZL5Z7xtQwIozIw0TiyHg\nF4qbHYcZ4SWjh67fvDfc1z8RLwTwodn5WHkk3s31AcOnb7JNWgYAqb2IbV9IdmVJ\nMH8xLxNKq1LxGRV76CscIuJh3ljl3hD57A4JGxEcXvi1oEXA89xfqnzk+QfSsrhG\nNW+ZLwvJidrRZ01bjuMhhGyQmT72dTRUelzVrDV1DT1Qtn8WgjmWk7LZgBlPepsM\ni39g80k4/KrDmz8c4N1KSg4Y13qaPmb/tatw9Ao46EVhImVjz1LQjp4p8gv2zPbI\ng0WrOdvoaJ0Qd2K/YQzWlJPsZJB8tXgG4O7RMNz6cQKBgQDqeSYaZTBwA4gZhJ67\nQrfFBjwbGyDnPhIt/fQqelBVoa6cwMekD/nGJvlazPEph7K2jGVYLuaP0lIE0B1X\n4iyDJl+TVfroR9jkF7BRs18gf/FB1Zq7xaz6S7t1LlGYMOZK6zV2ESXwd/2cmkeQ\nNNc6ZpJfNKWeUWHu786JJCVOMQKBgQDUzuc3G5D6R4RuVp6hirEcRzZeLakV7KvI\nSQvynYqM8y0V2twl3USeyxU6kfwHN3W294ADh75tGK7IVHO0NxPNqwGbyEPyJivi\nAAVBu80pT7QewHrxwow+ge1AxPw0qDagBavSnWbQH27lCXjaaqQmXzbvT5J96Iu3\nep6tHrlgewKBgQDcZgJ1/zXXpMoyymF2PlGFZsXq6MY19zeZecQghZar123NtLw0\nMDwlkY8EVe4+jmpjg3bjvDpHaHhmQ8XBTT1wDgr68HAIFTj/tnCra4L4hqsdqg5n\ngHmHUNalYGOcPiLKu2smTxotfmyq3q50E+dX4wClc1RWi8MVmN64NHzIkQKBgQDS\nP9zmcEDLVU886C1vsqQLKTxIzdnpRFvv1GOOfyG84iCgIAwzCKpcLI67wDF9O8j8\nTQjX9AwqoyFD4VQzL9tL7nD3ZWPj4NyoO5b1+8LV1t5BJ7AQHUMMGre5ryTyLWNS\ntGeu/T3vz65zcOlK+eNV2epfg4FbDh7D1szgg6No8wKBgBtrGrhur5PIvdhqbiKL\nWtOGMR9/PQ/qpJAr/hvJQGpxFPJvrnbowZZBnZBZDY7FHBio0rzysASMTTm+jjYr\nXPEJXui3u03sb1S8z16k2xTzy7RceNFZCg+rWfkDDlXRffgN33QcnCC9KWr1C+Mi\ncjXcadDlJnZIBEO1KDhx3si4\n-----END PRIVATE KEY-----\n",
  "client_email": "nginx-dev-samp@zs-devops.iam.gserviceaccount.com",
  "client_id": "115051303516475195378",
  "auth_uri": "https://accounts.google.com/o/oauth2/auth",
  "token_uri": "https://oauth2.googleapis.com/token",
  "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
  "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/nginx-dev-samp%40zs-devops.iam.gserviceaccount.com",
  "universe_domain": "googleapis.com"
}'
  GCR_KEY: '{"auths":{"us-central1-docker.pkg.dev":{"email":"image-pull@gcr","password":"{\n  \"type\": \"service_account\",\n  \"project_id\": \"zs-devops\",\n  \"private_key_id\": \"feaf5e3d65982153f19b16198d6dfc823bd25095\",\n  \"private_key\": \"-----BEGIN PRIVATE KEY-----\\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDC6dTQT7IbHYmn\\nzSonKnuE9WUAnFH930loesj1sOHMpiptAY5GOpTDavpAvT2Ronon5NBgRctuTPx9\\nZQ5FizmZbhim62VPNJ3cNrbpEIZ03M6a3Tvnpz1Pu7yiqAzSKDmelnEoRJP4AT9z\\nEteWCEg089b5Ug8FaEfD2G3kWUwkqXHbt1Y1zClbZEn0pdDDYoPnDyio74aY3n+e\\nLQL/TL3iTGhThH+xojrX4kQZ/p9U87RR+GAx1TZ2v/fa1yQ+KxsT8oidIbrgHN73\\neYwkfYLTiB+15qTsBgmt50N51UFIb/HrcrCjjeSJxAd+4ZNdILJY+q8Suh+Ra8vV\\nPK6ap/GLAgMBAAECggEAAp1B4H4PrLLgAG+ipFg/i2UCZL5Z7xtQwIozIw0TiyHg\\nF4qbHYcZ4SWjh67fvDfc1z8RLwTwodn5WHkk3s31AcOnb7JNWgYAqb2IbV9IdmVJ\\nMH8xLxNKq1LxGRV76CscIuJh3ljl3hD57A4JGxEcXvi1oEXA89xfqnzk+QfSsrhG\\nNW+ZLwvJidrRZ01bjuMhhGyQmT72dTRUelzVrDV1DT1Qtn8WgjmWk7LZgBlPepsM\\ni39g80k4/KrDmz8c4N1KSg4Y13qaPmb/tatw9Ao46EVhImVjz1LQjp4p8gv2zPbI\\ng0WrOdvoaJ0Qd2K/YQzWlJPsZJB8tXgG4O7RMNz6cQKBgQDqeSYaZTBwA4gZhJ67\\nQrfFBjwbGyDnPhIt/fQqelBVoa6cwMekD/nGJvlazPEph7K2jGVYLuaP0lIE0B1X\\n4iyDJl+TVfroR9jkF7BRs18gf/FB1Zq7xaz6S7t1LlGYMOZK6zV2ESXwd/2cmkeQ\\nNNc6ZpJfNKWeUWHu786JJCVOMQKBgQDUzuc3G5D6R4RuVp6hirEcRzZeLakV7KvI\\nSQvynYqM8y0V2twl3USeyxU6kfwHN3W294ADh75tGK7IVHO0NxPNqwGbyEPyJivi\\nAAVBu80pT7QewHrxwow+ge1AxPw0qDagBavSnWbQH27lCXjaaqQmXzbvT5J96Iu3\\nep6tHrlgewKBgQDcZgJ1/zXXpMoyymF2PlGFZsXq6MY19zeZecQghZar123NtLw0\\nMDwlkY8EVe4+jmpjg3bjvDpHaHhmQ8XBTT1wDgr68HAIFTj/tnCra4L4hqsdqg5n\\ngHmHUNalYGOcPiLKu2smTxotfmyq3q50E+dX4wClc1RWi8MVmN64NHzIkQKBgQDS\\nP9zmcEDLVU886C1vsqQLKTxIzdnpRFvv1GOOfyG84iCgIAwzCKpcLI67wDF9O8j8\\nTQjX9AwqoyFD4VQzL9tL7nD3ZWPj4NyoO5b1+8LV1t5BJ7AQHUMMGre5ryTyLWNS\\ntGeu/T3vz65zcOlK+eNV2epfg4FbDh7D1szgg6No8wKBgBtrGrhur5PIvdhqbiKL\\nWtOGMR9/PQ/qpJAr/hvJQGpxFPJvrnbowZZBnZBZDY7FHBio0rzysASMTTm+jjYr\\nXPEJXui3u03sb1S8z16k2xTzy7RceNFZCg+rWfkDDlXRffgN33QcnCC9KWr1C+Mi\\ncjXcadDlJnZIBEO1KDhx3si4\\n-----END PRIVATE KEY-----\\n\",\n  \"client_email\": \"nginx-dev-samp@zs-devops.iam.gserviceaccount.com\",\n  \"client_id\": \"115051303516475195378\",\n  \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n  \"token_uri\": \"https://oauth2.googleapis.com/token\",\n  \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n  \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/nginx-dev-samp%40zs-devops.iam.gserviceaccount.com\",\n  \"universe_domain\": \"googleapis.com\"\n}\n","username":"_json_key"}}}'

jobs:
  build:
    name: ðŸ§ª Unit Tests and ðŸ”¨ Build
    runs-on: ubuntu-latest

    if: github.event_name == 'pull_request' || (github.ref == 'refs/heads/Master' && github.event_name == 'push')

    steps:
      - name: Set up Go 1.19
        uses: actions/setup-go@v2
        with:
          go-version: 1.19
          id: Go

      - name: Checkout code into go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          git config --global url."https://${{ secrets.STAGE_PAT }}:x-oauth-basic@github.com/".insteadOf "https://github.com/"
          git config --global http.sslVerify false
          go mod download

      - name: Make Directory
        run: mkdir build

      - name: Build
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o main

      - name: Login to GCR
        uses: docker/login-action@v2
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ env.GCR_KEY }}

      - name: Build and Push Docker Image to GCR
        run: |
          docker build -t inv:67 .
          docker tag inv:67 gcr.io/${{ env.GCR_PROJECT }}/${{ env.APP_NAME }}:${{ github.sha }}
          docker push gcr.io/${{ env.GCR_PROJECT }}/${{ env.APP_NAME }}:${{ github.sha }}


      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ env.CLUSTER_PROJECT }}
          service_account_key: ${{ env.STAGE_DEPLOY_KEY }}
          export_default_credentials: true

      - name: Set GCloud Project and Fetch Cluster Credentials
        run: gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }}  --region=us-central1 --project=${{ env.CLUSTER_PROJECT }}

      - name: Update Deployment Image
        run: kubectl set image deployment/${{ env.APP_NAME }} ${{ env.APP_NAME }}=gcr.io/${{ env.GCR_PROJECT }}/${{ env.APP_NAME }}:${{ github.sha }} --namespace ${{ env.NAMESPACE }}
